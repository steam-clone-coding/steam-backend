buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}


plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.clone-coding'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.projectlombok:lombok:1.18.22'

    //Authentication Libraries
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'


	//Spring Implementations
	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'

	//Database Implementations
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.0.4'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.postgresql:postgresql:42.6.0'

	//Http Client Implementations
	implementation 'org.apache.httpcomponents:httpclient:4.5.14'
	implementation 'org.apache.httpcomponents:httpmime:4.5.14'


	//test Implementations
	testImplementation('org.springframework.boot:spring-boot-starter-test:3.1.1')



	testImplementation 'org.springframework.security:spring-security-test:6.0.2'
	testImplementation 'org.testcontainers:elasticsearch:1.17.6'
	testImplementation 'com.h2database:h2:2.2.220'
	testImplementation 'org.mock-server:mockserver-netty:5.15.0'

	// testContainer
	testImplementation "org.testcontainers:testcontainers:1.19.0"
	testImplementation "org.testcontainers:junit-jupiter"

	//Swagger
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	//Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	// QueryDSL 설정
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드


}

tasks.named('test') {
	useJUnitPlatform()
}

// == QueryDSL 추가 설정 == //
// QueryDSL 생성 파일 위치 -> 이를 설정해주지 않으면 build 디렉토리에 생성되는데, 인텔리제이에서 문제가 될수도 있음
// IntelliJ 빌드 시 스캔하는 영역과 Gradle 빌드 시 스캔하는 영역이 달라서 발생하는 오류 해결
def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 QueryDSL Q class 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}


// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}