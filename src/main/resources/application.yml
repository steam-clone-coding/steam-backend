jwt:
  secret: ${jwt.secret}
  access-token-expire-time: ${jwt.access-token-expire-time}
  refresh-token-expire-time: ${jwt.refresh-token-expire-time}
nanoId:
  alphabet: ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
  length: 10

spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}

  jpa:
    hibernate:
      ddl-auto: none

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${spring.mail.username}
    password: ${spring.mail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  security:
    pbkdf2:
      hashwidth: ${spring.security.pbkdf2.hashwidth}
      iterations: ${spring.security.pbkdf2.iterations}

    oauth2:
      client:
        registration:
          kakao:
            client-id: ${spring.security.oauth2.client.registration.kakao.client-id}
            #            client-secret: ${spring.security.oauth2.client.registration.kakao.client-secret}
            scope:
              - profile_nickname
              - profile_image
              - account_email
              - age_range
            client-name: Kakao
            authorization-grant-type: ${spring.security.oauth2.client.registration.kakao.authorization-grant-type}
            client-authentication-method: client_secret_post
            redirect-uri: ${spring.security.oauth2.client.registration.kakao.redirect-uri}

          google:
            client-id: ${spring.security.oauth2.client.registration.google.client-id}
            client-secret: ${spring.security.oauth2.client.registration.google.client-secret}
            scope:
              - email
              - profile
            redirect-uri: ${spring.security.oauth2.client.registration.google.redirect-uri}

          naver:
            client-id: ${spring.security.oauth2.client.registration.naver.client-id}
            client-secret: ${spring.security.oauth2.client.registration.naver.client-secret}
            scope:
              - name
              - email
              - profile_image
              - birthyear
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: ${spring.security.oauth2.client.registration.naver.redirect-uri}

        provider:
          kakao:
            authorization-uri: ${spring.security.oauth2.client.provider.kakao.authorization-uri}
            token-uri: ${spring.security.oauth2.client.provider.kakao.token-uri}
            user-info-uri: ${spring.security.oauth2.client.provider.kakao.user-info-uri}
            user-name-attribute: ${spring.security.oauth2.client.provider.kakao.user-name-attribute}

          naver:
            authorization-uri: ${spring.security.oauth2.client.provider.naver.authorization-uri}
            token-uri: ${spring.security.oauth2.client.provider.naver.token-uri}
            user-info-uri: ${spring.security.oauth2.client.provider.naver.user-info-uri}
            user-name-attribute: ${spring.security.oauth2.client.provider.naver.user-name-attribute}

      algorithm: ${spring.security.pbkdf2.algorithm}
      digest-size : ${spring.security.pbkdf2.digest-size}
    salt:
      algorithm: ${spring.security.salt.algorithm}

  data:
    redis:
      host: ${spring.data.redis.host}
      port: ${spring.data.redis.port}


static:
  image-server-uri: ${static.image-server-uri}
  single-file-upload-uri: ${static.single-file-upload-uri}
  multi-file-upload-uri: ${static.multi-file-upload-uri}
  delete-uri: ${static.delete-uri}
  access-token: ${static.access-token}
  timeout: 10000
